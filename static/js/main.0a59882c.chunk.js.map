{"version":3,"sources":["Components/Loader/Loader.js","Components/Table/Table.js","Components/TableSearch/TableSearch.js","App.js","index.js"],"names":["className","props","data","onClick","sortHandler","bind","sortField","sortDirection","map","item","key","id","Math","random","firstName","lastName","email","phone","type","placeholder","onChange","event","searchHandler","target","value","App","state","isDataSelected","isLoading","search","currentPage","field","clonedData","concat","sortType","orderedData","_","orderBy","setState","selectionData","url","fetchData","pageChangeHandler","page","selected","this","fetch","response","json","filter","toLowerCase","includes","filteredData","getFilteredData","newData","chunk","displayData","pageCount","length","Fragment","TableSearch","Table","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","pageClassName","pageLinkClassName","forcePage","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a59882c.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css';\n\nexport default () => (\n    <div className=\"wrap\">\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n    </div>\n)","import React from 'react';\n\nexport default (props) => (\n    <div>\n        { props.data \n        ?  <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th onClick={props.sortHandler.bind(null, 'id')}>\n                            id {props.sortField === 'id' ? <small>{props.sortDirection}</small> : ''}\n                        </th>\n                        <th onClick={props.sortHandler.bind(null, 'firstName')}>\n                            firstName {props.sortField === 'firstName' ? <small>{props.sortDirection}</small> : ''}\n                        </th>\n                        <th onClick={props.sortHandler.bind(null, 'lastName')}>\n                            lastName {props.sortField === 'lastName' ? <small>{props.sortDirection}</small> : ''}\n                        </th>\n                        <th onClick={props.sortHandler.bind(null, 'email')}>\n                            email {props.sortField === 'email' ? <small>{props.sortDirection}</small> : ''}\n                        </th>\n                        <th onClick={props.sortHandler.bind(null, 'phone')}>\n                            phone {props.sortField === 'phone' ? <small>{props.sortDirection}</small> : ''}\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.data.map(item => (\n                        <tr key={item.id + Math.random()}>\n                            <td>{item.id}</td>\n                            <td>{item.firstName}</td>\n                            <td>{item.lastName}</td>\n                            <td>{item.email}</td>\n                            <td>{item.phone}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        \n        :   <small>Полей не найдено</small>\n        }\n        \n    </div>\n)","import React from 'react';\n\nexport default (props) => {\n\n    const valueChangeHandler = (event) => {\n      props.searchHandler(event.target.value);\n    }\n \n    return (\n        <div className=\"input-group mb-3 mt-3\">\n        <input \n            type=\"text\" \n            placeholder=\"search\"\n            className=\"form-control\"\n            onChange={valueChangeHandler}\n        />\n        </div>\n    )\n}","import React, { Component } from 'react';\n\nimport Loader from './Components/Loader/Loader.js';\nimport Table from './Components/Table/Table.js';\nimport TableSearch from './Components/TableSearch/TableSearch.js'\n\nimport ReactPaginate from 'react-paginate';\nimport _ from 'lodash';\n\n\nclass App extends Component {\n\n  state = {\n    isDataSelected: false,\n    isLoading: false,\n    data: [],\n    search: '',\n    sortDirection: 'asc', // or desc\n    sortField: 'id',\n    currentPage: 0\n  }\n\n  componentDidMount() {\n    this.selectionData(`http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`)\n  }\n\n  async fetchData(url) {\n    const response = await fetch(url)\n    const data = await response.json();\n\n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sortDirection)\n    })\n  }\n\n  sortHandler = (field) => {\n    const clonedData = this.state.data.concat();\n    const sortType = this.state.sortDirection === 'asc' ? 'desc' : 'asc';\n\n    const orderedData = _.orderBy(clonedData, field, sortType);\n\n    this.setState({\n      data: orderedData,\n      sortDirection: sortType,\n      sortField: field\n    })\n  }\n\n  selectionData = (url) => {\n    this.setState({\n      isDataSelected: true,\n      isLoading: true\n    })\n\n    this.fetchData(url)\n  }\n\n  pageChangeHandler = (page) => {\n    this.setState({\n      currentPage: page.selected\n    })\n  }\n\n  searchHandler = (search) => {\n    this.setState({\n      search: search,\n      currentPage: 0\n    })\n  }\n\n  getFilteredData() {\n    const { data, search } = this.state\n\n    if (!search) {\n      return data;\n    }\n\n    return data.filter(item => {\n      return item['firstName'].toLowerCase().includes(search.toLowerCase())\n        || item['lastName'].toLowerCase().includes(search.toLowerCase())\n        || item['email'].toLowerCase().includes(search.toLowerCase())\n        || item['phone'].toLowerCase().includes(search.toLowerCase());\n    })\n\n  }\n\n  render() {\n    const filteredData = this.getFilteredData()\n\n    const pageSize = 50;\n    const newData = _.chunk(filteredData, pageSize),\n      displayData = newData[this.state.currentPage],\n      pageCount = newData.length;\n\n    return (\n      <div className=\"container\">\n        {\n          this.state.isLoading ?\n            <Loader /> :\n            <React.Fragment>\n              <TableSearch searchHandler={this.searchHandler} />\n              <Table\n                data={displayData}\n                sortHandler={this.sortHandler}\n                sortDirection={this.state.sortDirection}\n                sortField={this.state.sortField}\n              />\n            </React.Fragment>\n        }\n        {\n          this.state.data.length > pageSize ?\n            <ReactPaginate\n              previousLabel={'<'}\n              nextLabel={'>'}\n              breakLabel={'...'}\n              breakClassName={'break-me'}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={5}\n              onPageChange={this.pageChangeHandler}\n              containerClassName={'pagination'}\n              activeClassName={'active'}\n              previousClassName='page-item'\n              previousLinkClassName='page-link'\n              nextClassName='page-item'\n              nextLinkClassName='page-link'\n              pageClassName='page-item'\n              pageLinkClassName='page-link'\n              forcePage={this.state.currentPage}\n            /> : ''\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}